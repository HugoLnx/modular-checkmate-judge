== Apresentação == 

Este texto descreve brevemente o funcionamento de uma implementação de um avaliador de xeque mate. 

== Objetivo ==

O objetivo é avaliar, em um tabuleiro de 8x8 com peças de movimentos customizáveis, o acontecimento de xeque-mate.

== Menu do Programa ==

1  - Cadastrar pecas
2  - Alterar pecas
3  - Inserir pecas para o jogador ALIADO
4  - Inserir pecas para o jogador INIMIGO
5  - Inserir rei para jogador ALIADO
6  - Remover Rei
7  - Remover peca
8  - Exibir tabuleiro
9  - Checar xeque mate
10 - Salvar jogo
11 - Carregar jogo
12 - Resetar jogo
13 - Sair

== Detalhes do menu == 

Opção 1: Cadastra peças no programa. Para a criação de peças é necessário um nome, um conjunto de movimentos e o tipo de movimento.
Opção 2: Altera as peças já cadastradas, efetuando a busca pelo nome da peça e inserindo novos dados.
Opção 3: Inserir no tabuleiro a peça criada no time do jogador ALIADO.
Opção 4: Inserir no tabuleiro a peça criada no time do jogador INIMIGO.
Opção 5: Inserir no tabuleiro a peça rei no time do jogador ALIADO.
Opção 6: Remover do tabuleiro a peça rei do time ALIADO.
Opção 7: Remover peça do tabuleiro, buscando pela casa onde foi inserida.
Opção 8: Exibir o tabuleiro em formato de texto.
Opção 9: Avaliar a existencia de xeque-mate.
Opção 10: Salvar o jogo informando o nome do arquivo a ser salvo.
Opção 11: Carregar o jogo informando o nome do arquivo a ser carregado.
Opção 12: Resetar o tabuleiro, removendo todas as peças cadastradas e inseridas.

== Conjunto de movimentos == 

Conjunto de movimentos possuem as seguintes definições:
	* [n]coordenada -> onde n é um numero inteiro > que 0 e coordenada é apenas uma Coordenadas Geográficas.
	* Ex: [2]norte -> seguir dois passos para o norte
	* Para utilizar mais um tipo de coordenada, a seguinte convenção é adotada: [n]coordenada_[n]coordenada.
	* Ex: [2]norte_[2]este

== Tipo de movimentos == 
Existem dois tipos de movimentos:
	* Anda: corresponde ao andar casa a casa.
	* Voa: corresponde ao movimento estilo "cavalo" do xadrez, apenas a casa final é alcançada.

== Módulos == 

Para a criação do programa, os seguintes módulos foram utilizados:
	* input_string_parser: responsável interpretar os dados enviado pelo usuário e transformá-lo em dado útil para o programa.
	* checkmate_judge: responsável por verificar se o rei está em xeque-mate.
	* grafo: estrutura base para o tabuleiro.
	* direção: responsável por adminstrar as diferentes direções que uma peça pode se mover.
	* lista: usada internamente para auxílio.
	* mem_manager: módulo responsável pelo house keeping, garantindo que, ao final, toda mémoria usada tenha sido liberada.
	* modelo_peca: responsável por definir os modelos de peças criados pelo usuário.
	* partida: módulo responsável por gerenciar uma partida pré-avaliação de xeque-mate.
	* peca: responsável por representar uma peça inserida no tabuleiro.
	* passo: módulo com a responsabilidade de representar os passos que uma peça pode efetuar.
	* tabuleiro: responsável por gerenciar o grafo para se obter um comportamento de tabuleiro.
	* analise_partida: módulo com a responsábilidade de, uma partida, analisar os movimentos das peças e mapear as casas onde essas peças podem estar.
	* principal: interface com o usuário.



== Arquivos e diretórios detalhados ==

= Diretórios

Executável: contém o executável da aplicação.
Módulos: Contem os arquivos fonte de todos os módulos usados para compor a aplicação.
Documentos: Documentos gerados para a aplicação (Modelo físco, exemplo, relatorios);